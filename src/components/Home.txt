import React, { useState, useRef, useEffect } from 'react'
import './Home.css'
import axios from 'axios'

const URL = "http://localhost:3001/budget"
function Home() {
    const [values, setValues] = useState()
    const [budget, setBudget] = useState(0)
    const [state, setState] = useState([])
    const [togglebtn, setToggleBtn] = useState(true)
    const [editId, setEditId] = useState()
    const [expense, setExpense] = useState([])
   
    const expenseRef = useRef(null)
    const amountRef = useRef(null)

    let a = 0;
    const id = JSON.parse(sessionStorage.getItem('mycart')).id;

    const add = () => {
        console.log(values);
        setBudget(values)
    }
    const addExpense = () => {
        const newData = { id: Math.floor(Math.random() * 10 + 1), title: expenseRef.current.value, amount: amountRef.current.value }
        setState([...state, newData])
        const newexp = { title: expenseRef.current.value, amount: amountRef.current.value }
        setExpense([...expense, newexp])

    }
    const log = () => {
        const formData = {

            fname: JSON.parse(sessionStorage.getItem('mycart')).fname,
            lname: JSON.parse(sessionStorage.getItem('mycart')).lname,
            username: JSON.parse(sessionStorage.getItem('mycart')).username,
            email: JSON.parse(sessionStorage.getItem('mycart')).email,
            pass: JSON.parse(sessionStorage.getItem('mycart')).pass,
            cpass: JSON.parse(sessionStorage.getItem('mycart')).cpass,
            id: JSON.parse(sessionStorage.getItem('mycart')).id,
            total: budget,
            expense: [...state,
            {
                title: expenseRef.current.value, amount: amountRef.current.value
            },
            ]

        }
        var newURL = `${URL}/${id}`
        axios.put(newURL, formData)
        axios.get(URL)
            .then(res => console.log(res.data))

        const user1 = JSON.parse(sessionStorage.getItem('mycart'))

        const budget1 = {
            title: expenseRef.current.value,
            amount: amountRef.current.value
        }
        user1.expense = [...user1.expense, budget1]
        setState([...user1.expense])

        sessionStorage.setItem('mycart', JSON.stringify(user1))


    }

    const del = (id) => {
        const exp = [...state];
        const newExp = exp.filter((ele, index) => {
            return index !== id
        })
        setState(newExp)


    }
    const edit = () => {
        const expenseData = expenseRef.current.value;
        const amountData = amountRef.current.value;
        state[editId] = { id: editId, title: expenseData, amount: amountData }
        setState([...state])
        setToggleBtn(true)

    }

    const update = (id, data) => {
        expenseRef.current.value = data.title
        amountRef.current.value = data.amount;
        setToggleBtn(false)
        setEditId(id)

    }

    useEffect(() => {
        if (sessionStorage.getItem('mycart') != undefined) {
            const user1 = JSON.parse(sessionStorage.getItem('mycart'))
            const userd = user1.expense
            setState([...userd])
        }

    }, [])


    const data = state
    return (
        <>
            <div className="container-fluid">
                <h3 className="text-center">Budget Calculator</h3>
                <div className="row add-budget">
                    <div className="col-lg-4 home-left">
                        <div className="budget-contain">

                            <input type="number" className="form-control" placeholder="Enter Budget" value={values} onChange={e => setValues(e.target.value)} />
                            <button className="btn btn-outline-success mt-2" onClick={add}>Add Budget</button>

                        </div>


                        <div className="container mt-4 expense-contain ">
                            <input type="text" className="form-control" placeholder="Enter Your Expense" ref={expenseRef} />
                            <input type="text" className="form-control mt-2" placeholder="Enter Your Amount" ref={amountRef} />
                            {togglebtn ? <button className="btn btn-outline-warning mt-2" onClick={addExpense}>Add</button> : <button onClick={edit} className="btn btn-outline-warning mt-2">Edit</button>}
                        </div>
                    </div>
                    <div className="col-lg-7 home-right">
                        <div className="container display-budget">
                            <div className="row ml-2">
                                <div className="col-lg-4">
                                    <span style={{ fontSize: "18px", fontWeight: "bold", letterSpacing: "1px" }}>  Budget</span>:<br />
                                    <i class="fa fa-money" style={{ fontSize: "50px", color: "green" }}></i><br />
                                    {budget}
                                </div>
                                <div className="col-lg-4"> {
                                    data.forEach(add => (
                                        a += parseInt(add.amount)
                                    ))}
                                    <span style={{ fontSize: "18px", fontWeight: "bold", letterSpacing: "1px" }}>Expenses:</span><br />

                                    <i class="fa fa-credit-card" style={{ fontSize: "50px", color: "green" }}></i><br />
                                    {a}
                                </div>
                                <div className="col-lg-4">
                                    <span style={{ fontSize: "18px", fontWeight: "bold", letterSpacing: "1px" }}>Balance:</span><br />

                                    <i class="fa fa-inr" style={{ fontSize: "50px", color: "green" }}></i><br />
                                    {parseInt(budget - a)}</div>
                            </div>
                            <div className="text-right"><button className="btn btn-primary" onClick={log}>Save Data</button><br /></div>



                        </div>
                        <div className="container data-contain">
                            <table className="table">
                                <thead className="bg-primary text-center">
                                    <tr>
                                        <th scope="col">Title</th>
                                        <th scope="col">Amount</th>
                                        <th scope="col">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    {
                                        data.length > 0 ?
                                            data.map((data, index) => (
                                                <tr className="text-center">
                                                    <td>{data.title}</td><td>{data.amount}</td>
                                                    <td>
                                                        <button className="btn btn-danger " onClick={() => del(index)}>delete</button>
                                                        <button className="btn btn-warning ml-2" onClick={() => update(index, data)}>Update</button>
                                                    </td>
                                                </tr>
                                            )) : "null"


                                    }
                                </tbody>
                            </table>
                         
                        </div>


                    </div>
                </div>
            </div>

        </>
    )
}

export default Home
